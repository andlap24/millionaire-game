{"version":3,"sources":["components/Main/Main.jsx","components/Scores/Scores.jsx","components/AnswerList/AnswerList.jsx","components/Game/Game.jsx","components/GameOver/GameOver.jsx","App.jsx","index.js"],"names":["Main","className","to","type","Scores","counter","scores","map","score","classNames","id","right","width","disableAutoFocus","itemListElement","letters","AnswerList","answer","checkAnswer","selectedAnswer","index","role","onClick","Game","useState","setId","setCounter","setSelectedAnswer","isCorrectAnswer","setIsCorrectAnswer","isButtonVisible","setIsButtonVisible","totalScore","setTotalScore","usersAnswer","scoreCounter","some","questions","question","correct","questionId","content","indexOf","GameOver","props","winScore","history","location","pathname","slice","App","path","component","exact","render","ReactDOM","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.fe251f8c.chunk.js","sourcesContent":["import React from 'react';\nimport './Main.scss';\n\nimport { Link } from 'react-router-dom';\n\nexport const Main = () => (\n  <div className=\"wrapper\">\n    <div className=\"App\">\n      <div className=\"App__main-image\" />\n      <div className=\"App__main main\">\n        <h1 className=\"main__title\">\n          Who wants to be\n          <br />\n          a millionaire?\n        </h1>\n        <Link to=\"/game\">\n          <button\n            type=\"button\"\n            className=\"main__btn\"\n          >\n            Start\n          </button>\n        </Link>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Scores.scss';\n\nimport classNames from 'classnames';\nimport { stack as Menu } from 'react-burger-menu';\n\nimport scores from '../../api/scores.json';\n\nexport const Scores = ({ counter }) => (\n  <>\n    <div className=\"scores\">\n      {scores.map(score => (\n        <div\n          key={score.id}\n          className={classNames(\n            counter === score.id\n              ? 'scores__item--active'\n              : 'scores__item',\n          )}\n        >\n          {score.score}\n        </div>\n      ))}\n    </div>\n\n    <Menu\n      right\n      // eslint-disable-next-line\n      width={'100%'}\n      disableAutoFocus\n      itemListElement=\"div\"\n    >\n      {scores.map(score => (\n        <div className={classNames(\n          counter === score.id\n            ? 'scores__item--active'\n            : 'scores__item',\n        )}\n        >\n          <div>{score.score}</div>\n        </div>\n      ))}\n    </Menu>\n  </>\n);\n\nScores.propTypes = {\n  counter: PropTypes.number.isRequired,\n};\n","/* eslint-disable jsx-a11y/interactive-supports-focus */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst letters = ['A', 'B', 'C', 'D'];\n\nexport const AnswerList = ({ answer, checkAnswer, selectedAnswer, index }) => (\n  <div\n    key={answer}\n    className={classNames(\n      selectedAnswer === answer\n        ? 'list__option--selected'\n        : 'list__option',\n    )}\n    role=\"button\"\n    onClick={() => checkAnswer(answer)}\n  >\n    <p className=\"list__option-text\">\n      <span className=\"list__option-letter\">\n        {letters[index]}\n      </span>\n      {answer}\n    </p>\n  </div>\n);\n\nAnswerList.propTypes = {\n  answer: PropTypes.string.isRequired,\n  checkAnswer: PropTypes.func.isRequired,\n  selectedAnswer: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n};\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './Game.scss';\n\nimport { Scores } from '../Scores';\nimport { AnswerList } from '../AnswerList';\nimport questions from '../../api/questions.json';\nimport scores from '../../api/scores.json';\n\nexport const Game = () => {\n  const maxAnswersCount = 12;\n  const [id, setId] = useState(1);\n  const [counter, setCounter] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState('');\n  const [isCorrectAnswer, setIsCorrectAnswer] = useState(true);\n  const [isButtonVisible, setIsButtonVisible] = useState(false);\n  const [totalScore, setTotalScore] = useState('$0');\n\n  const handleQuestion = (questionId, correct) => {\n    if (selectedAnswer === correct) {\n      setId(questionId + 1);\n      setIsButtonVisible(false);\n      scoreCounter();\n    } else {\n      setIsCorrectAnswer(false);\n    }\n  };\n\n  const checkAnswer = (usersAnswer) => {\n    setSelectedAnswer(usersAnswer);\n    setIsButtonVisible(true);\n  };\n\n  const scoreCounter = () => {\n    setCounter(counter + 1);\n\n    scores.some((score) => {\n      if (id === score.id) {\n        return setTotalScore(score.score);\n      }\n\n      return null;\n    });\n  };\n\n  return (\n    <div className=\"Game\">\n      <div className=\"Game__body body\">\n        {questions.map(question => (\n          question.id === id && (\n            <>\n              <h3 key={question.id} className=\"body__question\">\n                {`${question.question} (${question.correct})`}\n              </h3>\n              <button\n                type=\"button\"\n                className={isButtonVisible\n                  ? 'body__question-btn--visible'\n                  : 'body__question-btn'\n                }\n                onClick={() => handleQuestion(question.id, question.correct)}\n              >\n                Submit\n              </button>\n              <div className=\"body__list list\">\n                {question.content.map(answer => (\n                  <AnswerList\n                    index={question.content.indexOf(answer)}\n                    answer={answer}\n                    checkAnswer={checkAnswer}\n                    selectedAnswer={selectedAnswer}\n                  />\n                ))}\n              </div>\n            </>\n          )\n        ))}\n      </div>\n\n      <Scores counter={counter} />\n\n      {(counter >= maxAnswersCount || !isCorrectAnswer) && (\n        <Redirect to={`gameover/:${totalScore}`} />\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './GameOver.scss';\n\nimport { Link } from 'react-router-dom';\n\nexport const GameOver = (props) => {\n  const winScore = props.history.location.pathname.slice(11);\n\n  return (\n    <div className=\"game-over\">\n      <div className=\"game-over__image\" />\n      <div className=\"game-over__main main\">\n        <p className=\"main__text\">\n          <span>\n            Total score:\n          </span>\n          <br />\n          {`${winScore} earned`}\n        </p>\n        <Link to=\"/\">\n          <button\n            type=\"button\"\n            className=\"main__btn\"\n          >\n            Try again\n          </button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nGameOver.propTypes = {\n  history: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.scss';\n\nimport { Main } from './components/Main';\nimport { Game } from './components/Game';\nimport { GameOver } from './components/GameOver';\n\nexport const App = () => (\n  <Switch>\n    <Route path=\"/gameover\" component={GameOver} />\n    <Route path=\"/game\" component={Game} />\n    <Route path=\"/\" exact component={Main} />\n    <Route render={() => <h1>404: page not found</h1>} />\n  </Switch>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}